name: Build .NET

on:
  push:
    branches: [master]
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.x
    - name: Restore
      run: dotnet restore

    - name: add harbor CA cert
      run: |
        sudo  mkdir -p /etc/docker/certs.d/${{secrets.HARBOR_HOST}}
        echo "${{secrets.HARBOR_CA_CRT}}" | sudo tee /etc/docker/certs.d/${{secrets.HARBOR_HOST}}/ca.crt
        sudo  cp /etc/docker/certs.d/${{secrets.HARBOR_HOST}}/ca.crt /usr/local/share/ca-certificates/harbor-ca.crt
        sudo  update-ca-certificates

    - name: login to harbor
      run: |
        docker login https://${{secrets.HARBOR_HOST}}  -u "${{secrets.HARBOR_USER}}"   -p "${{secrets.HARBOR_PWD}}"

    - name: build and push
      run: |
        docker build -t ${{secrets.HARBOR_HOST}}/demo/cicd:${GITHUB_SHA::7} .
        docker push ${{secrets.HARBOR_HOST}}/demo/cicd:${GITHUB_SHA::7}
    
        #    - name: Build
        #      run: dotnet build --no-restore
        #    - name: Login to DockerHub
        #      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        #    - name: 构建镜像
        #      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/cicd:latest .
        #    - name: Push Docker image
        #      run: docker push ${{ secrets.DOCKER_USERNAME }}/cicd:latest

    - name: ssh into k3s server and deploy
      run: |
        sshpass -p "${{ secrets.K8S_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.K8S_USERNAME }}@${{ secrets.K8s_HOST }} << EOF
          echo "成功登录到k3s服务器"
          # cd /root/pro/deploy
          kubectl set image deployment/pro-cicd pro-cicd=${{secrets.HARBOR_HOST}}/demo/cicd:${GITHUB_SHA::7} --record
          # kubectl apply -f CICD.yaml
          kubectl rollout restart deployment/pro-cicd
         
